[2024-03-20T18:47:47.502+0000] {taskinstance.py:1979} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: dag_sensor_minio_s3_v1.sensing_s3 manual__2024-03-20T18:41:33.860203+00:00 [queued]>
[2024-03-20T18:47:47.506+0000] {taskinstance.py:1979} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: dag_sensor_minio_s3_v1.sensing_s3 manual__2024-03-20T18:41:33.860203+00:00 [queued]>
[2024-03-20T18:47:47.506+0000] {taskinstance.py:2193} INFO - Starting attempt 2 of 2
[2024-03-20T18:47:47.512+0000] {taskinstance.py:2217} INFO - Executing <Task(S3KeySensor): sensing_s3> on 2024-03-20 18:41:33.860203+00:00
[2024-03-20T18:47:47.516+0000] {standard_task_runner.py:60} INFO - Started process 4068 to run task
[2024-03-20T18:47:47.519+0000] {standard_task_runner.py:87} INFO - Running: ['***', 'tasks', 'run', 'dag_sensor_minio_s3_v1', 'sensing_s3', 'manual__2024-03-20T18:41:33.860203+00:00', '--job-id', '8', '--raw', '--subdir', 'DAGS_FOLDER/dag_with_minio_s3_SensorOperator.py', '--cfg-path', '/tmp/tmpp98ud_9k']
[2024-03-20T18:47:47.520+0000] {standard_task_runner.py:88} INFO - Job 8: Subtask sensing_s3
[2024-03-20T18:47:47.544+0000] {task_command.py:423} INFO - Running <TaskInstance: dag_sensor_minio_s3_v1.sensing_s3 manual__2024-03-20T18:41:33.860203+00:00 [running]> on host c1f7f51b1f08
[2024-03-20T18:47:47.588+0000] {taskinstance.py:2513} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='Hitesh' AIRFLOW_CTX_DAG_ID='dag_sensor_minio_s3_v1' AIRFLOW_CTX_TASK_ID='sensing_s3' AIRFLOW_CTX_EXECUTION_DATE='2024-03-20T18:41:33.860203+00:00' AIRFLOW_CTX_TRY_NUMBER='2' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-03-20T18:41:33.860203+00:00'
[2024-03-20T18:47:47.589+0000] {s3.py:110} INFO - Poking for key : s3://***/data.csv
[2024-03-20T18:47:47.593+0000] {base.py:83} INFO - Using connection ID 'minio_s3' for task execution.
[2024-03-20T18:47:47.593+0000] {connection_wrapper.py:384} INFO - AWS Connection (conn_id='minio_s3', conn_type='aws') credentials retrieved from login and password.
[2024-03-20T18:47:47.596+0000] {logging_mixin.py:188} WARNING - <string>:9 AirflowProviderDeprecationWarning: extra['host'] is deprecated and will be removed in a future release. Please set extra['endpoint_url'] instead
[2024-03-20T18:47:47.768+0000] {taskinstance.py:2731} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/botocore/httpsession.py", line 451, in send
    conn = manager.connection_from_url(request.url)
  File "/home/airflow/.local/lib/python3.8/site-packages/urllib3/poolmanager.py", line 298, in connection_from_url
    u = parse_url(url)
  File "/home/airflow/.local/lib/python3.8/site-packages/urllib3/util/url.py", line 397, in parse_url
    return six.raise_from(LocationParseError(source_url), None)
  File "<string>", line 3, in raise_from
urllib3.exceptions.LocationParseError: Failed to parse: http://host.docker.internal:9000 /***/data.csv

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/models/taskinstance.py", line 444, in _execute_task
    result = _execute_callable(context=context, **execute_callable_kwargs)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/models/taskinstance.py", line 414, in _execute_callable
    return execute_callable(context=context, **execute_callable_kwargs)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/amazon/aws/sensors/s3.py", line 153, in execute
    super().execute(context)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/sensors/base.py", line 265, in execute
    raise e
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/sensors/base.py", line 247, in execute
    poke_return = self.poke(context)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/amazon/aws/sensors/s3.py", line 146, in poke
    return self._check_key(self.bucket_key)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/amazon/aws/sensors/s3.py", line 134, in _check_key
    obj = self.hook.head_object(key, bucket_name)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/amazon/aws/hooks/s3.py", line 137, in wrapper
    return func(*bound_args.args, **bound_args.kwargs)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/amazon/aws/hooks/s3.py", line 91, in wrapper
    return func(*bound_args.args, **bound_args.kwargs)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/amazon/aws/hooks/s3.py", line 901, in head_object
    return self.get_conn().head_object(Bucket=bucket_name, Key=key)
  File "/home/airflow/.local/lib/python3.8/site-packages/botocore/client.py", line 553, in _api_call
    return self._make_api_call(operation_name, kwargs)
  File "/home/airflow/.local/lib/python3.8/site-packages/botocore/client.py", line 989, in _make_api_call
    http, parsed_response = self._make_request(
  File "/home/airflow/.local/lib/python3.8/site-packages/botocore/client.py", line 1015, in _make_request
    return self._endpoint.make_request(operation_model, request_dict)
  File "/home/airflow/.local/lib/python3.8/site-packages/botocore/endpoint.py", line 119, in make_request
    return self._send_request(request_dict, operation_model)
  File "/home/airflow/.local/lib/python3.8/site-packages/botocore/endpoint.py", line 202, in _send_request
    while self._needs_retry(
  File "/home/airflow/.local/lib/python3.8/site-packages/botocore/endpoint.py", line 354, in _needs_retry
    responses = self._event_emitter.emit(
  File "/home/airflow/.local/lib/python3.8/site-packages/botocore/hooks.py", line 412, in emit
    return self._emitter.emit(aliased_event_name, **kwargs)
  File "/home/airflow/.local/lib/python3.8/site-packages/botocore/hooks.py", line 256, in emit
    return self._emit(event_name, kwargs)
  File "/home/airflow/.local/lib/python3.8/site-packages/botocore/hooks.py", line 239, in _emit
    response = handler(**kwargs)
  File "/home/airflow/.local/lib/python3.8/site-packages/botocore/retryhandler.py", line 207, in __call__
    if self._checker(**checker_kwargs):
  File "/home/airflow/.local/lib/python3.8/site-packages/botocore/retryhandler.py", line 284, in __call__
    should_retry = self._should_retry(
  File "/home/airflow/.local/lib/python3.8/site-packages/botocore/retryhandler.py", line 307, in _should_retry
    return self._checker(
  File "/home/airflow/.local/lib/python3.8/site-packages/botocore/retryhandler.py", line 363, in __call__
    checker_response = checker(
  File "/home/airflow/.local/lib/python3.8/site-packages/botocore/retryhandler.py", line 247, in __call__
    return self._check_caught_exception(
  File "/home/airflow/.local/lib/python3.8/site-packages/botocore/retryhandler.py", line 416, in _check_caught_exception
    raise caught_exception
  File "/home/airflow/.local/lib/python3.8/site-packages/botocore/endpoint.py", line 281, in _do_get_response
    http_response = self._send(request)
  File "/home/airflow/.local/lib/python3.8/site-packages/botocore/endpoint.py", line 377, in _send
    return self.http_session.send(request)
  File "/home/airflow/.local/lib/python3.8/site-packages/botocore/httpsession.py", line 509, in send
    raise HTTPClientError(error=e)
botocore.exceptions.HTTPClientError: An HTTP Client raised an unhandled exception: Failed to parse: http://host.docker.internal:9000 /***/data.csv
[2024-03-20T18:47:47.774+0000] {taskinstance.py:1149} INFO - Marking task as FAILED. dag_id=dag_sensor_minio_s3_v1, task_id=sensing_s3, execution_date=20240320T184133, start_date=20240320T184747, end_date=20240320T184747
[2024-03-20T18:47:47.780+0000] {standard_task_runner.py:107} ERROR - Failed to execute job 8 for task sensing_s3 (An HTTP Client raised an unhandled exception: Failed to parse: http://host.docker.internal:9000 /***/data.csv; 4068)
[2024-03-20T18:47:47.785+0000] {local_task_job_runner.py:234} INFO - Task exited with return code 1
[2024-03-20T18:47:47.793+0000] {taskinstance.py:3312} INFO - 0 downstream tasks scheduled from follow-on schedule check
